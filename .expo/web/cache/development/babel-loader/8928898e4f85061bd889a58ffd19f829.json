{"ast":null,"code":"import { useContext } from 'react';\nimport { AuthContext } from \"../navigation/AuthProvider\";\nexport function Connexion(mail, password) {\n  var _useContext = useContext(AuthContext),\n      login = _useContext.login;\n\n  fetch('https://b3-groupe1.etu.epsi-nantes.fr/user/login', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: mail,\n      password: password\n    })\n  }).then(function (_response) {\n    console.log('API REPONSE');\n  }).catch(function (error) {\n    return console.error(error);\n  }).finally(function () {\n    console.log('API REPONSE');\n    login(\"token\");\n  });\n}\nexport function Inscription(mail, password) {\n  fetch('https://api.chucknorris.io/jokes/random', {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    console.log(response);\n  }).catch(function (error) {\n    return console.error(error);\n  }).finally(function () {\n    return false;\n  });\n}\nexport function ajoutOuvrage(Titre, Auteur, Tome, Genre, Style, Description) {\n  fetch('http://localhost:8000/user/register', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      titre: Titre,\n      auteur: Auteur,\n      tome: Tome,\n      genre: Genre,\n      style: Style,\n      description: Description\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (error) {\n    return console.error(error);\n  }).finally(function () {\n    return false;\n  });\n  ;\n}\nexport function filtreOuvrage(Titre, Auteur, Tome, Genre, Style, Description) {\n  fetch('http://localhost:8000/user/register', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      titre: Titre,\n      auteur: Auteur,\n      tome: Tome,\n      genre: Genre,\n      style: Style,\n      description: Description\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (error) {\n    return console.error(error);\n  }).finally(function () {\n    return false;\n  });\n  ;\n}","map":{"version":3,"sources":["D:/Documents/EPSI COURS/dev mobile/livre/src/API/ServiceAuthentification.tsx"],"names":["useContext","AuthContext","Connexion","mail","password","login","fetch","method","headers","Accept","body","JSON","stringify","email","then","_response","console","log","catch","error","finally","Inscription","response","ajoutOuvrage","Titre","Auteur","Tome","Genre","Style","Description","titre","auteur","tome","genre","style","description","json","filtreOuvrage"],"mappings":"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","sourcesContent":["import { useContext } from 'react';\r\nimport {AuthContext} from '../navigation/AuthProvider'\r\nexport function Connexion(mail:String,password:String){\r\n  const {login} = useContext(AuthContext);\r\n  fetch('https://b3-groupe1.etu.epsi-nantes.fr/user/login', {\r\n    //Utilise la methode POST / GET / PUT ...\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    //Bind les parametre avec l'API et la vue\r\n    body: JSON.stringify({\r\n      email: mail,\r\n      password: password\r\n    })\r\n  })\r\n      .then((_response) => {\r\n      console.log('API REPONSE')\r\n      //login(\"token\")\r\n    })\r\n      .catch((error) => console.error(error))\r\n      .finally(() => {\r\n        console.log('API REPONSE')\r\n        login(\"token\")\r\n      });\r\n      \r\n}\r\n\r\nexport function Inscription(mail:String,password:String){\r\n  fetch('https://api.chucknorris.io/jokes/random', {\r\n    //Utilise la methode POST / GET / PUT ...\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    }/*,\r\n    //Bind les parametre avec l'API et la vue\r\n    body: JSON.stringify({\r\n      \"email\": mail,\r\n      \"pseudo\": mail,\r\n      \"password\": password\r\n    })*/\r\n  })\r\n      .then((response) => {console.log(response)})\r\n      .catch((error) => console.error(error))\r\n      .finally(() => (false));\r\n      \r\n}\r\n\r\nexport function ajoutOuvrage(Titre:any, Auteur:any, Tome:any, Genre:any, Style:any, Description:any){\r\n  fetch('http://localhost:8000/user/register', {\r\n    //Utilise la methode POST / GET / PUT ...\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    //Bind les parametre avec l'API et la vue\r\n    body: JSON.stringify({\r\n      titre: Titre,\r\n      auteur: Auteur,\r\n      tome: Tome,\r\n      genre: Genre,\r\n      style: Style,\r\n      description: Description\r\n    })\r\n  })\r\n      .then((response) => response.json())\r\n      .catch((error) => console.error(error))\r\n      .finally(() => (false));\r\n      ;\r\n}\r\nexport function filtreOuvrage(Titre:any, Auteur:any, Tome:any, Genre:any, Style:any, Description:any){\r\n  fetch('http://localhost:8000/user/register', {\r\n    //Utilise la methode POST / GET / PUT ...\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    //Bind les parametre avec l'API et la vue\r\n    body: JSON.stringify({\r\n      titre: Titre,\r\n      auteur: Auteur,\r\n      tome: Tome,\r\n      genre: Genre,\r\n      style: Style,\r\n      description: Description\r\n    })\r\n  })\r\n      .then((response) => response.json())\r\n      .catch((error) => console.error(error))\r\n      .finally(() => (false));\r\n      ;\r\n}"]},"metadata":{},"sourceType":"module"}