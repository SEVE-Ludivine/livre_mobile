{"ast":null,"code":"export function Connexion(mail, password) {\n  fetch('https://b3-groupe1.etu.epsi-nantes.fr/user/login', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: mail,\n      password: password\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (error) {\n    return console.error(error);\n  }).finally(function () {\n    return false;\n  });\n}\nexport function Inscription(mail, password) {\n  fetch('https://b3-groupe1.etu.epsi-nantes.fr/user/find', {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    console.log(response);\n  }).catch(function (error) {\n    return console.error(error);\n  }).finally(function () {\n    return false;\n  });\n  ;\n}\nexport function ajoutOuvrage(Titre, Auteur, Tome, Genre, Style, Description) {\n  fetch('http://localhost:8000/user/register', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      titre: Titre,\n      auteur: Auteur,\n      tome: Tome,\n      genre: Genre,\n      style: Style,\n      description: Description\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (error) {\n    return console.error(error);\n  }).finally(function () {\n    return false;\n  });\n  ;\n}\nexport function filtreOuvrage(Titre, Auteur, Tome, Genre, Style, Description) {\n  fetch('http://localhost:8000/user/register', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      titre: Titre,\n      auteur: Auteur,\n      tome: Tome,\n      genre: Genre,\n      style: Style,\n      description: Description\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (error) {\n    return console.error(error);\n  }).finally(function () {\n    return false;\n  });\n  ;\n}","map":{"version":3,"sources":["D:/Documents/EPSI COURS/dev mobile/livre/src/API/ServiceAuthentification.tsx"],"names":["Connexion","mail","password","fetch","method","headers","Accept","body","JSON","stringify","email","then","response","json","catch","error","console","finally","Inscription","log","ajoutOuvrage","Titre","Auteur","Tome","Genre","Style","Description","titre","auteur","tome","genre","style","description","filtreOuvrage"],"mappings":"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","sourcesContent":["export function Connexion(mail:String,password:String){\r\n  fetch('https://b3-groupe1.etu.epsi-nantes.fr/user/login', {\r\n    //Utilise la methode POST / GET / PUT ...\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    //Bind les parametre avec l'API et la vue\r\n    body: JSON.stringify({\r\n      email: mail,\r\n      password: password\r\n    })\r\n  })\r\n      .then((response) => response.json())\r\n      .catch((error) => console.error(error))\r\n      .finally(() => (false));\r\n      \r\n}\r\n\r\nexport function Inscription(mail:String,password:String){\r\n  fetch('https://b3-groupe1.etu.epsi-nantes.fr/user/find', {\r\n    //Utilise la methode POST / GET / PUT ...\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    }/*,\r\n    //Bind les parametre avec l'API et la vue\r\n    body: JSON.stringify({\r\n      \"email\": mail,\r\n      \"pseudo\": mail,\r\n      \"password\": password\r\n    })*/\r\n  })\r\n      .then((response) => {console.log(response)})\r\n      .catch((error) => console.error(error))\r\n      .finally(() => (false));\r\n      ;\r\n}\r\n\r\nexport function ajoutOuvrage(Titre:any, Auteur:any, Tome:any, Genre:any, Style:any, Description:any){\r\n  fetch('http://localhost:8000/user/register', {\r\n    //Utilise la methode POST / GET / PUT ...\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    //Bind les parametre avec l'API et la vue\r\n    body: JSON.stringify({\r\n      titre: Titre,\r\n      auteur: Auteur,\r\n      tome: Tome,\r\n      genre: Genre,\r\n      style: Style,\r\n      description: Description\r\n    })\r\n  })\r\n      .then((response) => response.json())\r\n      .catch((error) => console.error(error))\r\n      .finally(() => (false));\r\n      ;\r\n}\r\nexport function filtreOuvrage(Titre:any, Auteur:any, Tome:any, Genre:any, Style:any, Description:any){\r\n  fetch('http://localhost:8000/user/register', {\r\n    //Utilise la methode POST / GET / PUT ...\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    //Bind les parametre avec l'API et la vue\r\n    body: JSON.stringify({\r\n      titre: Titre,\r\n      auteur: Auteur,\r\n      tome: Tome,\r\n      genre: Genre,\r\n      style: Style,\r\n      description: Description\r\n    })\r\n  })\r\n      .then((response) => response.json())\r\n      .catch((error) => console.error(error))\r\n      .finally(() => (false));\r\n      ;\r\n}"]},"metadata":{},"sourceType":"module"}